// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 15.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Generators.Sync.Component
{
    using System.Linq;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public partial class SyncComponentGenerator : SyncComponentGeneratorBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("using NetStack.Serialization;\r\n");
            
            #line 10 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"

    if (FieldTypes.Any(x => x == "System.Single")|| 
        FieldTypes.Any(x => x == "UnityEngine.Vector2")|| 
        FieldTypes.Any(x => x == "UnityEngine.Vector3"))
    {
	
            
            #line default
            #line hidden
            this.Write("using NetStack.Compression;\r\n\t");
            
            #line 17 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"

	}

            
            #line default
            #line hidden
            this.Write("\r\npublic partial class ");
            
            #line 21 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ComponentName));
            
            #line default
            #line hidden
            this.Write(" : INetworkComponent\r\n{\r\n    public void Serialize(BitBuffer bitBuffer)\r\n\t{\r\n\t\tbi" +
                    "tBuffer.AddUShort(");
            
            #line 25 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ComponentId));
            
            #line default
            #line hidden
            this.Write(");\r\n\r\n");
            
            #line 27 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
 
	for (int i = 0; i < FieldTypes.Length; i++)
	{
		if (IsEnums[i])
        {

            
            #line default
            #line hidden
            this.Write("\t\tbitBuffer.AddByte((byte)");
            
            #line 33 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 34 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"

        }
        else
        {
            var compressed = IsCompressed[i];
            var compName = ComponentName.Replace("Component", "");

		switch(FieldTypes[i])
        {
			case "System.Byte":

            
            #line default
            #line hidden
            this.Write("\t\tbitBuffer.AddByte(");
            
            #line 45 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write("); \r\n");
            
            #line 46 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"

			break;

			case "System.Int32":

            
            #line default
            #line hidden
            this.Write("\t\tbitBuffer.AddInt(");
            
            #line 51 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write("); \r\n");
            
            #line 52 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"

			break;

			case "System.UInt32":

            
            #line default
            #line hidden
            this.Write("\t\tbitBuffer.AddUInt(");
            
            #line 57 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write("); \r\n");
            
            #line 58 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"

			break;

			case "System.Int64":

            
            #line default
            #line hidden
            this.Write("\t\tbitBuffer.AddLong(");
            
            #line 63 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write("); \r\n");
            
            #line 64 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"

			break;

			case "System.UInt64":

            
            #line default
            #line hidden
            this.Write("\t\tbitBuffer.AddULong(");
            
            #line 69 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 70 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"

			break;

				case "System.Int16":

            
            #line default
            #line hidden
            this.Write("\t\tbitBuffer.AddShort(");
            
            #line 75 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write("); \r\n");
            
            #line 76 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"

			break;

			case "System.UInt16":

            
            #line default
            #line hidden
            this.Write("\t\tbitBuffer.AddUShort(");
            
            #line 81 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write("); \r\n");
            
            #line 82 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"

			break;

			case "System.String":

            
            #line default
            #line hidden
            this.Write("\t\tbitBuffer.AddString(");
            
            #line 87 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write("); \r\n");
            
            #line 88 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"

			break;

			case "System.Boolean":

            
            #line default
            #line hidden
            this.Write("\t\tbitBuffer.AddBool(");
            
            #line 93 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write("); \r\n");
            
            #line 94 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"

			break;
			
			case "System.Single":
                if (compressed)
                {

            
            #line default
            #line hidden
            this.Write("        bitBuffer.AddUInt(SyncCompressors.");
            
            #line 101 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ComponentName.Replace("Component", "")));
            
            #line default
            #line hidden
            
            #line 101 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write("Compressor.Compress(");
            
            #line 101 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write("));\r\n");
            
            #line 102 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"

                }
                else
                {

            
            #line default
            #line hidden
            this.Write("        bitBuffer.AddUShort(HalfPrecision.Compress(");
            
            #line 107 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write("));\r\n");
            
            #line 108 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"

                }
			break;
			
			case "UnityEngine.Vector2":
                if (compressed)
                {

            
            #line default
            #line hidden
            this.Write("        bitBuffer.AddUInt(SyncCompressors.");
            
            #line 116 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ComponentName.Replace("Component", "")));
            
            #line default
            #line hidden
            
            #line 116 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write("XCompressor.Compress(");
            
            #line 116 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write(".x));\r\n        bitBuffer.AddUInt(SyncCompressors.");
            
            #line 117 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ComponentName.Replace("Component", "")));
            
            #line default
            #line hidden
            
            #line 117 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write("YCompressor.Compress(");
            
            #line 117 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write(".y));\r\n");
            
            #line 118 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"

                }
                else
                {

            
            #line default
            #line hidden
            this.Write("        bitBuffer.AddUShort(HalfPrecision.Compress(");
            
            #line 123 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write(".x));\r\n        bitBuffer.AddUShort(HalfPrecision.Compress(");
            
            #line 124 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write(".y));\r\n");
            
            #line 125 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"

                }
			break;
			
			case "UnityEngine.Vector3":
                if (compressed)
                {

            
            #line default
            #line hidden
            this.Write("        bitBuffer.AddUInt(SyncCompressors.");
            
            #line 133 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ComponentName.Replace("Component", "")));
            
            #line default
            #line hidden
            
            #line 133 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write("XCompressor.Compress(");
            
            #line 133 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write(".x));\r\n        bitBuffer.AddUInt(SyncCompressors.");
            
            #line 134 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ComponentName.Replace("Component", "")));
            
            #line default
            #line hidden
            
            #line 134 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write("YCompressor.Compress(");
            
            #line 134 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write(".y));\r\n        bitBuffer.AddUInt(SyncCompressors.");
            
            #line 135 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ComponentName.Replace("Component", "")));
            
            #line default
            #line hidden
            
            #line 135 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write("ZCompressor.Compress(");
            
            #line 135 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write(".z));\r\n");
            
            #line 136 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"

                }
                else
                {

            
            #line default
            #line hidden
            this.Write("        bitBuffer.AddUShort(HalfPrecision.Compress(");
            
            #line 141 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write(".x));\r\n        bitBuffer.AddUShort(HalfPrecision.Compress(");
            
            #line 142 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write(".y));\r\n        bitBuffer.AddUShort(HalfPrecision.Compress(");
            
            #line 143 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write(".z));\r\n");
            
            #line 144 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"

                }
			break;
		}
	    }
	} 

            
            #line default
            #line hidden
            this.Write("\t}\r\n\r\n\tpublic void Deserialize(BitBuffer bitBuffer)\r\n\t{\r\n");
            
            #line 154 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
 
	for (int i = 0; i < FieldTypes.Length; i++)
	{
		if (IsEnums[i])
        {

            
            #line default
            #line hidden
            this.Write("\t\t");
            
            #line 160 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write(" = (");
            
            #line 160 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldTypes[i]));
            
            #line default
            #line hidden
            this.Write(")bitBuffer.ReadByte(); \r\n");
            
            #line 161 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"

        }
        else
        {
        var compressed = IsCompressed[i];
		switch(FieldTypes[i])
        {
			case "System.Byte":

            
            #line default
            #line hidden
            this.Write("\t\t");
            
            #line 170 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write(" = bitBuffer.ReadByte(); \r\n");
            
            #line 171 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"

			break;

			case "System.Int32":

            
            #line default
            #line hidden
            this.Write("\t\t");
            
            #line 176 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write(" = bitBuffer.ReadInt(); \r\n");
            
            #line 177 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"

			break;

			case "System.UInt32":

            
            #line default
            #line hidden
            this.Write("\t\t");
            
            #line 182 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write(" = bitBuffer.ReadUInt(); \r\n");
            
            #line 183 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"

			break;

			case "System.Int64":

            
            #line default
            #line hidden
            this.Write("\t\t");
            
            #line 188 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write(" = bitBuffer.ReadLong(); \r\n");
            
            #line 189 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"

			break;

			case "System.UInt64":

            
            #line default
            #line hidden
            this.Write("\t\t");
            
            #line 194 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write(" = bitBuffer.ReadULong();\r\n");
            
            #line 195 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"

			break;

				case "System.Int16":

            
            #line default
            #line hidden
            this.Write("\t\t");
            
            #line 200 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write(" = bitBuffer.ReadShort(); \r\n");
            
            #line 201 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"

			break;

			case "System.UInt16":

            
            #line default
            #line hidden
            this.Write("\t\t");
            
            #line 206 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write(" = bitBuffer.ReadUShort(); \r\n");
            
            #line 207 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"

			break;

			case "System.String":

            
            #line default
            #line hidden
            this.Write("\t\t");
            
            #line 212 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write(" = bitBuffer.ReadString();\r\n");
            
            #line 213 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"

			break;

			case "System.Boolean":

            
            #line default
            #line hidden
            this.Write("\t\t");
            
            #line 218 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write(" = bitBuffer.ReadBool(); \r\n");
            
            #line 219 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"

			break;

			case "System.Single":
                if (compressed)
                {

            
            #line default
            #line hidden
            this.Write("        ");
            
            #line 226 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write(" = SyncCompressors.");
            
            #line 226 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ComponentName.Replace("Component", "")));
            
            #line default
            #line hidden
            
            #line 226 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write("Compressor.Decompress(bitBuffer.ReadUInt());\r\n");
            
            #line 227 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"

                }
                else
                {

            
            #line default
            #line hidden
            this.Write("        ");
            
            #line 232 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write(" = HalfPrecision.Decompress(bitBuffer.ReadUShort());\r\n");
            
            #line 233 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"

                }
			break;
			
			case "UnityEngine.Vector2":
                if (compressed)
                {

            
            #line default
            #line hidden
            this.Write("        ");
            
            #line 241 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write(".x = SyncCompressors.");
            
            #line 241 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ComponentName.Replace("Component", "")));
            
            #line default
            #line hidden
            
            #line 241 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write("XCompressor.Decompress(bitBuffer.ReadUInt());\r\n        ");
            
            #line 242 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write(".y = SyncCompressors.");
            
            #line 242 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ComponentName.Replace("Component", "")));
            
            #line default
            #line hidden
            
            #line 242 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write("YCompressor.Decompress(bitBuffer.ReadUInt());\r\n");
            
            #line 243 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"

                }
                else
                {

            
            #line default
            #line hidden
            this.Write("        ");
            
            #line 248 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write(".x = HalfPrecision.Decompress(bitBuffer.ReadUShort());\r\n        ");
            
            #line 249 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write(".y = HalfPrecision.Decompress(bitBuffer.ReadUShort());\r\n");
            
            #line 250 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"

                }
			break;
			
			case "UnityEngine.Vector3":
                if (compressed)
                {

            
            #line default
            #line hidden
            this.Write("        ");
            
            #line 258 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write(".x = SyncCompressors.");
            
            #line 258 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ComponentName.Replace("Component", "")));
            
            #line default
            #line hidden
            
            #line 258 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write("XCompressor.Decompress(bitBuffer.ReadUInt());\r\n        ");
            
            #line 259 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write(".y = SyncCompressors.");
            
            #line 259 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ComponentName.Replace("Component", "")));
            
            #line default
            #line hidden
            
            #line 259 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write("YCompressor.Decompress(bitBuffer.ReadUInt());\r\n        ");
            
            #line 260 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write(".z = SyncCompressors.");
            
            #line 260 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ComponentName.Replace("Component", "")));
            
            #line default
            #line hidden
            
            #line 260 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write("ZCompressor.Decompress(bitBuffer.ReadUInt());\r\n\r\n");
            
            #line 262 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"

                }
                else
                {

            
            #line default
            #line hidden
            this.Write("        ");
            
            #line 267 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write(".x = HalfPrecision.Decompress(bitBuffer.ReadUShort());\r\n        ");
            
            #line 268 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write(".y = HalfPrecision.Decompress(bitBuffer.ReadUShort());\r\n        ");
            
            #line 269 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FieldNames[i]));
            
            #line default
            #line hidden
            this.Write(".z = HalfPrecision.Decompress(bitBuffer.ReadUShort());\r\n");
            
            #line 270 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"

                }
			break;
		} 
		}
	} 

            
            #line default
            #line hidden
            this.Write("\t}\r\n}");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 1 "C:\UnityProjects\Coop-JRPG-git\Generators\Generators\Generators\Sync\Component\SyncComponentGenerator.tt"

private string _ComponentNameField;

/// <summary>
/// Access the ComponentName parameter of the template.
/// </summary>
private string ComponentName
{
    get
    {
        return this._ComponentNameField;
    }
}

private ushort _ComponentIdField;

/// <summary>
/// Access the ComponentId parameter of the template.
/// </summary>
private ushort ComponentId
{
    get
    {
        return this._ComponentIdField;
    }
}

private string[] _FieldTypesField;

/// <summary>
/// Access the FieldTypes parameter of the template.
/// </summary>
private string[] FieldTypes
{
    get
    {
        return this._FieldTypesField;
    }
}

private string[] _FieldNamesField;

/// <summary>
/// Access the FieldNames parameter of the template.
/// </summary>
private string[] FieldNames
{
    get
    {
        return this._FieldNamesField;
    }
}

private bool[] _IsEnumsField;

/// <summary>
/// Access the IsEnums parameter of the template.
/// </summary>
private bool[] IsEnums
{
    get
    {
        return this._IsEnumsField;
    }
}

private bool[] _IsCompressedField;

/// <summary>
/// Access the IsCompressed parameter of the template.
/// </summary>
private bool[] IsCompressed
{
    get
    {
        return this._IsCompressedField;
    }
}


/// <summary>
/// Initialize the template
/// </summary>
public virtual void Initialize()
{
    if ((this.Errors.HasErrors == false))
    {
bool ComponentNameValueAcquired = false;
if (this.Session.ContainsKey("ComponentName"))
{
    this._ComponentNameField = ((string)(this.Session["ComponentName"]));
    ComponentNameValueAcquired = true;
}
if ((ComponentNameValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("ComponentName");
    if ((data != null))
    {
        this._ComponentNameField = ((string)(data));
    }
}
bool ComponentIdValueAcquired = false;
if (this.Session.ContainsKey("ComponentId"))
{
    this._ComponentIdField = ((ushort)(this.Session["ComponentId"]));
    ComponentIdValueAcquired = true;
}
if ((ComponentIdValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("ComponentId");
    if ((data != null))
    {
        this._ComponentIdField = ((ushort)(data));
    }
}
bool FieldTypesValueAcquired = false;
if (this.Session.ContainsKey("FieldTypes"))
{
    this._FieldTypesField = ((string[])(this.Session["FieldTypes"]));
    FieldTypesValueAcquired = true;
}
if ((FieldTypesValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("FieldTypes");
    if ((data != null))
    {
        this._FieldTypesField = ((string[])(data));
    }
}
bool FieldNamesValueAcquired = false;
if (this.Session.ContainsKey("FieldNames"))
{
    this._FieldNamesField = ((string[])(this.Session["FieldNames"]));
    FieldNamesValueAcquired = true;
}
if ((FieldNamesValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("FieldNames");
    if ((data != null))
    {
        this._FieldNamesField = ((string[])(data));
    }
}
bool IsEnumsValueAcquired = false;
if (this.Session.ContainsKey("IsEnums"))
{
    this._IsEnumsField = ((bool[])(this.Session["IsEnums"]));
    IsEnumsValueAcquired = true;
}
if ((IsEnumsValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("IsEnums");
    if ((data != null))
    {
        this._IsEnumsField = ((bool[])(data));
    }
}
bool IsCompressedValueAcquired = false;
if (this.Session.ContainsKey("IsCompressed"))
{
    this._IsCompressedField = ((bool[])(this.Session["IsCompressed"]));
    IsCompressedValueAcquired = true;
}
if ((IsCompressedValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("IsCompressed");
    if ((data != null))
    {
        this._IsCompressedField = ((bool[])(data));
    }
}


    }
}


        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public class SyncComponentGeneratorBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
