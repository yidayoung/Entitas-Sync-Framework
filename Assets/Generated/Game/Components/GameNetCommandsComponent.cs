//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity netCommandsEntity { get { return GetGroup(GameMatcher.NetCommands).GetSingleEntity(); } }
    public NetCommandsComponent netCommands { get { return netCommandsEntity.netCommands; } }
    public bool hasNetCommands { get { return netCommandsEntity != null; } }

    public GameEntity SetNetCommands(System.Collections.Generic.List<ICommand> newCommands) {
        if (hasNetCommands) {
            throw new Entitas.EntitasException("Could not set NetCommands!\n" + this + " already has an entity with NetCommandsComponent!",
                "You should check if the context already has a netCommandsEntity before setting it or use context.ReplaceNetCommands().");
        }
        var entity = CreateEntity();
        entity.AddNetCommands(newCommands);
        return entity;
    }

    public void ReplaceNetCommands(System.Collections.Generic.List<ICommand> newCommands) {
        var entity = netCommandsEntity;
        if (entity == null) {
            entity = SetNetCommands(newCommands);
        } else {
            entity.ReplaceNetCommands(newCommands);
        }
    }

    public void RemoveNetCommands() {
        netCommandsEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public NetCommandsComponent netCommands { get { return (NetCommandsComponent)GetComponent(GameComponentsLookup.NetCommands); } }
    public bool hasNetCommands { get { return HasComponent(GameComponentsLookup.NetCommands); } }

    public void AddNetCommands(System.Collections.Generic.List<ICommand> newCommands) {
        var index = GameComponentsLookup.NetCommands;
        var component = (NetCommandsComponent)CreateComponent(index, typeof(NetCommandsComponent));
        component.Commands = newCommands;
        AddComponent(index, component);
    }

    public void ReplaceNetCommands(System.Collections.Generic.List<ICommand> newCommands) {
        var index = GameComponentsLookup.NetCommands;
        var component = (NetCommandsComponent)CreateComponent(index, typeof(NetCommandsComponent));
        component.Commands = newCommands;
        ReplaceComponent(index, component);
    }

    public void RemoveNetCommands() {
        RemoveComponent(GameComponentsLookup.NetCommands);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherNetCommands;

    public static Entitas.IMatcher<GameEntity> NetCommands {
        get {
            if (_matcherNetCommands == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.NetCommands);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherNetCommands = matcher;
            }

            return _matcherNetCommands;
        }
    }
}
