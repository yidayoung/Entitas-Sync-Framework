//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity clientWorldStateListEntity { get { return GetGroup(GameMatcher.ClientWorldStateList).GetSingleEntity(); } }
    public ClientWorldStateListComponent clientWorldStateList { get { return clientWorldStateListEntity.clientWorldStateList; } }
    public bool hasClientWorldStateList { get { return clientWorldStateListEntity != null; } }

    public GameEntity SetClientWorldStateList(System.Collections.Generic.Dictionary<long, ClientWorldState> newWorldStates) {
        if (hasClientWorldStateList) {
            throw new Entitas.EntitasException("Could not set ClientWorldStateList!\n" + this + " already has an entity with ClientWorldStateListComponent!",
                "You should check if the context already has a clientWorldStateListEntity before setting it or use context.ReplaceClientWorldStateList().");
        }
        var entity = CreateEntity();
        entity.AddClientWorldStateList(newWorldStates);
        return entity;
    }

    public void ReplaceClientWorldStateList(System.Collections.Generic.Dictionary<long, ClientWorldState> newWorldStates) {
        var entity = clientWorldStateListEntity;
        if (entity == null) {
            entity = SetClientWorldStateList(newWorldStates);
        } else {
            entity.ReplaceClientWorldStateList(newWorldStates);
        }
    }

    public void RemoveClientWorldStateList() {
        clientWorldStateListEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ClientWorldStateListComponent clientWorldStateList { get { return (ClientWorldStateListComponent)GetComponent(GameComponentsLookup.ClientWorldStateList); } }
    public bool hasClientWorldStateList { get { return HasComponent(GameComponentsLookup.ClientWorldStateList); } }

    public void AddClientWorldStateList(System.Collections.Generic.Dictionary<long, ClientWorldState> newWorldStates) {
        var index = GameComponentsLookup.ClientWorldStateList;
        var component = (ClientWorldStateListComponent)CreateComponent(index, typeof(ClientWorldStateListComponent));
        component.WorldStates = newWorldStates;
        AddComponent(index, component);
    }

    public void ReplaceClientWorldStateList(System.Collections.Generic.Dictionary<long, ClientWorldState> newWorldStates) {
        var index = GameComponentsLookup.ClientWorldStateList;
        var component = (ClientWorldStateListComponent)CreateComponent(index, typeof(ClientWorldStateListComponent));
        component.WorldStates = newWorldStates;
        ReplaceComponent(index, component);
    }

    public void RemoveClientWorldStateList() {
        RemoveComponent(GameComponentsLookup.ClientWorldStateList);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherClientWorldStateList;

    public static Entitas.IMatcher<GameEntity> ClientWorldStateList {
        get {
            if (_matcherClientWorldStateList == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ClientWorldStateList);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherClientWorldStateList = matcher;
            }

            return _matcherClientWorldStateList;
        }
    }
}
