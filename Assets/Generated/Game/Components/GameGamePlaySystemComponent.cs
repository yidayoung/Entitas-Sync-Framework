//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity gamePlaySystemEntity { get { return GetGroup(GameMatcher.GamePlaySystem).GetSingleEntity(); } }
    public GamePlaySystemComponent gamePlaySystem { get { return gamePlaySystemEntity.gamePlaySystem; } }
    public bool hasGamePlaySystem { get { return gamePlaySystemEntity != null; } }

    public GameEntity SetGamePlaySystem(GamePlaySystem newGamePlaySystem) {
        if (hasGamePlaySystem) {
            throw new Entitas.EntitasException("Could not set GamePlaySystem!\n" + this + " already has an entity with GamePlaySystemComponent!",
                "You should check if the context already has a gamePlaySystemEntity before setting it or use context.ReplaceGamePlaySystem().");
        }
        var entity = CreateEntity();
        entity.AddGamePlaySystem(newGamePlaySystem);
        return entity;
    }

    public void ReplaceGamePlaySystem(GamePlaySystem newGamePlaySystem) {
        var entity = gamePlaySystemEntity;
        if (entity == null) {
            entity = SetGamePlaySystem(newGamePlaySystem);
        } else {
            entity.ReplaceGamePlaySystem(newGamePlaySystem);
        }
    }

    public void RemoveGamePlaySystem() {
        gamePlaySystemEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public GamePlaySystemComponent gamePlaySystem { get { return (GamePlaySystemComponent)GetComponent(GameComponentsLookup.GamePlaySystem); } }
    public bool hasGamePlaySystem { get { return HasComponent(GameComponentsLookup.GamePlaySystem); } }

    public void AddGamePlaySystem(GamePlaySystem newGamePlaySystem) {
        var index = GameComponentsLookup.GamePlaySystem;
        var component = (GamePlaySystemComponent)CreateComponent(index, typeof(GamePlaySystemComponent));
        component.GamePlaySystem = newGamePlaySystem;
        AddComponent(index, component);
    }

    public void ReplaceGamePlaySystem(GamePlaySystem newGamePlaySystem) {
        var index = GameComponentsLookup.GamePlaySystem;
        var component = (GamePlaySystemComponent)CreateComponent(index, typeof(GamePlaySystemComponent));
        component.GamePlaySystem = newGamePlaySystem;
        ReplaceComponent(index, component);
    }

    public void RemoveGamePlaySystem() {
        RemoveComponent(GameComponentsLookup.GamePlaySystem);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGamePlaySystem;

    public static Entitas.IMatcher<GameEntity> GamePlaySystem {
        get {
            if (_matcherGamePlaySystem == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GamePlaySystem);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGamePlaySystem = matcher;
            }

            return _matcherGamePlaySystem;
        }
    }
}
