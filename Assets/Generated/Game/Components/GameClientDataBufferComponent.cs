//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ClientDataBuffer clientDataBuffer { get { return (ClientDataBuffer)GetComponent(GameComponentsLookup.ClientDataBuffer); } }
    public bool hasClientDataBuffer { get { return HasComponent(GameComponentsLookup.ClientDataBuffer); } }

    public void AddClientDataBuffer(ushort newCommandCount, NetStack.Serialization.BitBuffer newValue) {
        var index = GameComponentsLookup.ClientDataBuffer;
        var component = (ClientDataBuffer)CreateComponent(index, typeof(ClientDataBuffer));
        component.CommandCount = newCommandCount;
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceClientDataBuffer(ushort newCommandCount, NetStack.Serialization.BitBuffer newValue) {
        var index = GameComponentsLookup.ClientDataBuffer;
        var component = (ClientDataBuffer)CreateComponent(index, typeof(ClientDataBuffer));
        component.CommandCount = newCommandCount;
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveClientDataBuffer() {
        RemoveComponent(GameComponentsLookup.ClientDataBuffer);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherClientDataBuffer;

    public static Entitas.IMatcher<GameEntity> ClientDataBuffer {
        get {
            if (_matcherClientDataBuffer == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ClientDataBuffer);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherClientDataBuffer = matcher;
            }

            return _matcherClientDataBuffer;
        }
    }
}
