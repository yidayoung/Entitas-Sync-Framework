//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public IceComponent ice { get { return (IceComponent)GetComponent(GameComponentsLookup.Ice); } }
    public bool hasIce { get { return HasComponent(GameComponentsLookup.Ice); } }

    public void AddIce(string newOwner, long newStartTick, long newLastsTick) {
        var index = GameComponentsLookup.Ice;
        var component = (IceComponent)CreateComponent(index, typeof(IceComponent));
        component.Owner = newOwner;
        component.StartTick = newStartTick;
        component.LastsTick = newLastsTick;
        AddComponent(index, component);
    }

    public void ReplaceIce(string newOwner, long newStartTick, long newLastsTick) {
        var index = GameComponentsLookup.Ice;
        var component = (IceComponent)CreateComponent(index, typeof(IceComponent));
        component.Owner = newOwner;
        component.StartTick = newStartTick;
        component.LastsTick = newLastsTick;
        ReplaceComponent(index, component);
    }

    public void RemoveIce() {
        RemoveComponent(GameComponentsLookup.Ice);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherIce;

    public static Entitas.IMatcher<GameEntity> Ice {
        get {
            if (_matcherIce == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Ice);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherIce = matcher;
            }

            return _matcherIce;
        }
    }
}
